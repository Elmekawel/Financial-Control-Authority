// <auto-generated />
using System;
using MICLifePortal.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MICLifePortal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231121071453_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MICLifePortal.Models.BenefeciaryType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("ID");

                    b.ToTable("BenefeciaryTypes");
                });

            modelBuilder.Entity("MICLifePortal.Models.Contact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ContactType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NationalID")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("ContactType");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("MICLifePortal.Models.ContractorType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SName")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("ID");

                    b.ToTable("ContractorTypes");
                });

            modelBuilder.Entity("MICLifePortal.Models.Credentials", b =>
                {
                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClientSecret")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Credentials");
                });

            modelBuilder.Entity("MICLifePortal.Models.EntityType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SName")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("ID");

                    b.ToTable("EntityTypes");
                });

            modelBuilder.Entity("MICLifePortal.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ArName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCodeExt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductCodeInt")
                        .HasColumnType("int");

                    b.Property<string>("SectorId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MICLifePortal.Models.Reasons", b =>
                {
                    b.Property<int>("ReasonsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReasonsID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReasonsCategoryID")
                        .HasColumnType("int");

                    b.HasKey("ReasonsID");

                    b.HasIndex("ReasonsCategoryID");

                    b.ToTable("Reasons");
                });

            modelBuilder.Entity("MICLifePortal.Models.ReasonsCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmallName")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("ID");

                    b.ToTable("ReasonsCategories");
                });

            modelBuilder.Entity("MICLifePortal.Models.ReasonsType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SName")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("ID");

                    b.ToTable("ReasonsTypes");
                });

            modelBuilder.Entity("MICLifePortal.Models.RejectedEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("BeneficiaryTID")
                        .HasColumnType("int");

                    b.Property<int?>("BeneficiaryType")
                        .HasColumnType("int");

                    b.Property<int?>("ContractorID")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int?>("DocumentNo")
                        .HasColumnType("int");

                    b.Property<string>("OtherReasons")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PremiumValue")
                        .HasColumnType("float");

                    b.Property<int?>("ProductCode")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RefuseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RefuseTID")
                        .HasColumnType("int");

                    b.Property<int?>("RejectedEntityType")
                        .HasColumnType("int");

                    b.Property<int?>("RepaymentNo")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BeneficiaryTID");

                    b.HasIndex("BeneficiaryType");

                    b.HasIndex("ContractorID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("ReasonId");

                    b.HasIndex("RefuseTID");

                    b.HasIndex("RejectedEntityType");

                    b.ToTable("RejectedEntities");
                });

            modelBuilder.Entity("MICLifePortal.Models.RejectionBeneficiary", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("BeneficiaryID")
                        .HasColumnType("int");

                    b.Property<double?>("BeneficiaryPrec")
                        .HasColumnType("float");

                    b.Property<int?>("RejectedEntityID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BeneficiaryID");

                    b.HasIndex("RejectedEntityID");

                    b.ToTable("RejectionBeneficiaries");
                });

            modelBuilder.Entity("MICLifePortal.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("MICLifePortal.Models.TokenResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpiresIn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TokenResponses");
                });

            modelBuilder.Entity("MICLifePortal.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MICLifePortal.Models.Contact", b =>
                {
                    b.HasOne("MICLifePortal.Models.ContractorType", "ContractorType")
                        .WithMany()
                        .HasForeignKey("ContactType");

                    b.Navigation("ContractorType");
                });

            modelBuilder.Entity("MICLifePortal.Models.Reasons", b =>
                {
                    b.HasOne("MICLifePortal.Models.ReasonsCategory", "ReasonsCategory")
                        .WithMany()
                        .HasForeignKey("ReasonsCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReasonsCategory");
                });

            modelBuilder.Entity("MICLifePortal.Models.RejectedEntity", b =>
                {
                    b.HasOne("MICLifePortal.Models.Contact", "BeneficiaryTIDContact")
                        .WithMany()
                        .HasForeignKey("BeneficiaryTID");

                    b.HasOne("MICLifePortal.Models.BenefeciaryType", "BenefeciaryType")
                        .WithMany()
                        .HasForeignKey("BeneficiaryType");

                    b.HasOne("MICLifePortal.Models.Contact", "Contractor")
                        .WithMany()
                        .HasForeignKey("ContractorID");

                    b.HasOne("MICLifePortal.Models.Contact", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("MICLifePortal.Models.Reasons", "Reasons")
                        .WithMany()
                        .HasForeignKey("ReasonId");

                    b.HasOne("MICLifePortal.Models.ReasonsType", "RefuseType")
                        .WithMany()
                        .HasForeignKey("RefuseTID");

                    b.HasOne("MICLifePortal.Models.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("RejectedEntityType");

                    b.Navigation("BenefeciaryType");

                    b.Navigation("BeneficiaryTIDContact");

                    b.Navigation("Contractor");

                    b.Navigation("Customer");

                    b.Navigation("EntityType");

                    b.Navigation("Reasons");

                    b.Navigation("RefuseType");
                });

            modelBuilder.Entity("MICLifePortal.Models.RejectionBeneficiary", b =>
                {
                    b.HasOne("MICLifePortal.Models.Contact", "Beneficiary")
                        .WithMany()
                        .HasForeignKey("BeneficiaryID");

                    b.HasOne("MICLifePortal.Models.RejectedEntity", "RejectedEntity")
                        .WithMany()
                        .HasForeignKey("RejectedEntityID");

                    b.Navigation("Beneficiary");

                    b.Navigation("RejectedEntity");
                });

            modelBuilder.Entity("MICLifePortal.Models.User", b =>
                {
                    b.HasOne("MICLifePortal.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MICLifePortal.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
